import unittest
import CAI
board1 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","BR","  "],
         ["  ","  ","BP","  ","  ","  ","  ","BQ"],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","WN","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]
board2 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["BP","BP","BP","BP","BP","BP","BP","BP"],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]
board3 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["WP","WQ","WK","WR","WB","WN","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]
board4 =[["BR","BN","BB","BQ","BK","BB","BN","BR"],
         ["BP","BP","BP","BP","BP","BP","BP","BP"],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["WP","WP","WP","WP","WP","WP","WP","WP"],
         ["WR","WN","WB","WQ","WK","WB","WN","WR"]]
board5 =[["BR","BN","BB","BQ","BK","BB","BN","BR"],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["WR","WN","WB","WQ","WK","WB","WN","WR"]]
board6 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["BP","BP","BP","BP","BP","BP","BP","BP"],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["WP","WP","WP","WP","WP","WP","WP","WP"],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]
board7 =[["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"],
         ["BQ","BQ","BQ","BQ","BQ","BQ","BQ","BQ"]]
board8 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]
board9 =[["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","BP","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "],
         ["  ","  ","  ","  ","  ","  ","  ","  "]]

class AITest(unittest.TestCase):
    def test_eval1(self):
        self.assertEqual(CAI.eval(board1), -12)
    def test_eval2(self):
        self.assertEqual(CAI.eval(board2), -8)
    def test_eval3(self):
        self.assertEqual(CAI.eval(board3), 111)
    def test_eval4(self):
        self.assertEqual(CAI.eval(board4), 0)
    def test_eval5(self):
        self.assertEqual(CAI.eval(board5), 0)
    def test_eval6(self):
        self.assertEqual(CAI.eval(board6), 0)
    def test_eval7(self):
        self.assertEqual(CAI.eval(board7), -576)
    def test_eval8(self):
        self.assertEqual(CAI.eval(board8), 0)
    def test_eval9(self):
        self.assertEqual(CAI.eval(board9), -12)


if __name__=="__main__":
    unittest.main()

